<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Teamsiteusersaddnlinfo', 'doctrine');

/**
 * BaseTeamsiteusersaddnlinfo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $jobtitle
 * @property string $phonenumber
 * @property string $fax
 * @property string $mobile
 * @property integer $Siteusers_id
 * @property integer $Priviclass_id
 * @property Siteusers $Siteusers
 * @property Priviclass $Priviclass
 * 
 * @method integer                getId()            Returns the current record's "id" value
 * @method string                 getJobtitle()      Returns the current record's "jobtitle" value
 * @method string                 getPhonenumber()   Returns the current record's "phonenumber" value
 * @method string                 getFax()           Returns the current record's "fax" value
 * @method string                 getMobile()        Returns the current record's "mobile" value
 * @method integer                getSiteusersId()   Returns the current record's "Siteusers_id" value
 * @method integer                getPriviclassId()  Returns the current record's "Priviclass_id" value
 * @method Siteusers              getSiteusers()     Returns the current record's "Siteusers" value
 * @method Priviclass             getPriviclass()    Returns the current record's "Priviclass" value
 * @method Teamsiteusersaddnlinfo setId()            Sets the current record's "id" value
 * @method Teamsiteusersaddnlinfo setJobtitle()      Sets the current record's "jobtitle" value
 * @method Teamsiteusersaddnlinfo setPhonenumber()   Sets the current record's "phonenumber" value
 * @method Teamsiteusersaddnlinfo setFax()           Sets the current record's "fax" value
 * @method Teamsiteusersaddnlinfo setMobile()        Sets the current record's "mobile" value
 * @method Teamsiteusersaddnlinfo setSiteusersId()   Sets the current record's "Siteusers_id" value
 * @method Teamsiteusersaddnlinfo setPriviclassId()  Sets the current record's "Priviclass_id" value
 * @method Teamsiteusersaddnlinfo setSiteusers()     Sets the current record's "Siteusers" value
 * @method Teamsiteusersaddnlinfo setPriviclass()    Sets the current record's "Priviclass" value
 * 
 * @package    PhpProject2
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTeamsiteusersaddnlinfo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('teamsiteusersaddnlinfo');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 4,
             ));
        $this->hasColumn('jobtitle', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 255,
             ));
        $this->hasColumn('phonenumber', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 20,
             ));
        $this->hasColumn('fax', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 20,
             ));
        $this->hasColumn('mobile', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 20,
             ));
        $this->hasColumn('Siteusers_id', 'integer', 10, array(
             'type' => 'integer',
             'length' => 10,
             ));
        $this->hasColumn('Priviclass_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Siteusers', array(
             'local' => 'Siteusers_id',
             'foreign' => 'id'));

        $this->hasOne('Priviclass', array(
             'local' => 'Priviclass_id',
             'foreign' => 'id'));
    }
}