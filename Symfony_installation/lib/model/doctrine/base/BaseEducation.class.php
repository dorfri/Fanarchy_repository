<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Education', 'doctrine');

/**
 * BaseEducation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property timestamp $timeperiodstart
 * @property timestamp $timeperiodend
 * @property string $concentrations
 * @property string $attendedfor
 * @property Doctrine_Collection $SiteUsers
 * @property Doctrine_Collection $MtmSiteusers2education
 * @property Doctrine_Collection $Siteusers
 * 
 * @method integer             getId()                     Returns the current record's "id" value
 * @method timestamp           getTimeperiodstart()        Returns the current record's "timeperiodstart" value
 * @method timestamp           getTimeperiodend()          Returns the current record's "timeperiodend" value
 * @method string              getConcentrations()         Returns the current record's "concentrations" value
 * @method string              getAttendedfor()            Returns the current record's "attendedfor" value
 * @method Doctrine_Collection getSiteUsers()              Returns the current record's "SiteUsers" collection
 * @method Doctrine_Collection getMtmSiteusers2education() Returns the current record's "MtmSiteusers2education" collection
 * @method Doctrine_Collection getSiteusers()              Returns the current record's "Siteusers" collection
 * @method Education           setId()                     Sets the current record's "id" value
 * @method Education           setTimeperiodstart()        Sets the current record's "timeperiodstart" value
 * @method Education           setTimeperiodend()          Sets the current record's "timeperiodend" value
 * @method Education           setConcentrations()         Sets the current record's "concentrations" value
 * @method Education           setAttendedfor()            Sets the current record's "attendedfor" value
 * @method Education           setSiteUsers()              Sets the current record's "SiteUsers" collection
 * @method Education           setMtmSiteusers2education() Sets the current record's "MtmSiteusers2education" collection
 * @method Education           setSiteusers()              Sets the current record's "Siteusers" collection
 * 
 * @package    PhpProject2
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEducation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('education');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 4,
             ));
        $this->hasColumn('timeperiodstart', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 25,
             ));
        $this->hasColumn('timeperiodend', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 25,
             ));
        $this->hasColumn('concentrations', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 255,
             ));
        $this->hasColumn('attendedfor', 'string', 25, array(
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Siteusers as SiteUsers', array(
             'refClass' => 'MtmSiteusers2education',
             'local' => 'education_id',
             'foreign' => 'siteusers_id'));

        $this->hasMany('MtmSiteusers2education', array(
             'local' => 'id',
             'foreign' => 'education_id'));

        $this->hasMany('Siteusers', array(
             'local' => 'id',
             'foreign' => 'Education_id'));
    }
}