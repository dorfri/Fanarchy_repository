<?php

/**
 * BasePaymentRegister
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property timestamp $createdatetime
 * @property integer $ppi_id
 * @property integer $Siteusers_id
 * @property PPI $PPI
 * @property Siteusers $Siteusers
 * 
 * @method integer         getId()             Returns the current record's "id" value
 * @method timestamp       getCreatedatetime() Returns the current record's "createdatetime" value
 * @method integer         getPpiId()          Returns the current record's "ppi_id" value
 * @method integer         getSiteusersId()    Returns the current record's "Siteusers_id" value
 * @method PPI             getPPI()            Returns the current record's "PPI" value
 * @method Siteusers       getSiteusers()      Returns the current record's "Siteusers" value
 * @method PaymentRegister setId()             Sets the current record's "id" value
 * @method PaymentRegister setCreatedatetime() Sets the current record's "createdatetime" value
 * @method PaymentRegister setPpiId()          Sets the current record's "ppi_id" value
 * @method PaymentRegister setSiteusersId()    Sets the current record's "Siteusers_id" value
 * @method PaymentRegister setPPI()            Sets the current record's "PPI" value
 * @method PaymentRegister setSiteusers()      Sets the current record's "Siteusers" value
 * 
 * @package    PhpProject2
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePaymentRegister extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('payment_register');
        $this->hasColumn('id', 'integer', 10, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'length' => 10,
             ));
        $this->hasColumn('createdatetime', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('ppi_id', 'integer', 5, array(
             'type' => 'integer',
             'length' => 5,
             ));
        $this->hasColumn('Siteusers_id', 'integer', 10, array(
             'type' => 'integer',
             'length' => 10,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PPI', array(
             'local' => 'ppi_id',
             'foreign' => 'id'));

        $this->hasOne('Siteusers', array(
             'local' => 'Siteusers_id',
             'foreign' => 'id'));
    }
}