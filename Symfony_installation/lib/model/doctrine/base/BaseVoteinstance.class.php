<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Voteinstance', 'doctrine');

/**
 * BaseVoteinstance
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $participation
 * @property integer $totalpageviews
 * @property integer $totalshared
 * @property integer $totalcomments
 * @property timestamp $creationtime
 * @property integer $Vote_id
 * @property Vote $Vote
 * @property Doctrine_Collection $Answervalue
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method integer             getParticipation()  Returns the current record's "participation" value
 * @method integer             getTotalpageviews() Returns the current record's "totalpageviews" value
 * @method integer             getTotalshared()    Returns the current record's "totalshared" value
 * @method integer             getTotalcomments()  Returns the current record's "totalcomments" value
 * @method timestamp           getCreationtime()   Returns the current record's "creationtime" value
 * @method integer             getVoteId()         Returns the current record's "Vote_id" value
 * @method Vote                getVote()           Returns the current record's "Vote" value
 * @method Doctrine_Collection getAnswervalue()    Returns the current record's "Answervalue" collection
 * @method Voteinstance        setId()             Sets the current record's "id" value
 * @method Voteinstance        setParticipation()  Sets the current record's "participation" value
 * @method Voteinstance        setTotalpageviews() Sets the current record's "totalpageviews" value
 * @method Voteinstance        setTotalshared()    Sets the current record's "totalshared" value
 * @method Voteinstance        setTotalcomments()  Sets the current record's "totalcomments" value
 * @method Voteinstance        setCreationtime()   Sets the current record's "creationtime" value
 * @method Voteinstance        setVoteId()         Sets the current record's "Vote_id" value
 * @method Voteinstance        setVote()           Sets the current record's "Vote" value
 * @method Voteinstance        setAnswervalue()    Sets the current record's "Answervalue" collection
 * 
 * @package    PhpProject2
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVoteinstance extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('voteinstance');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 4,
             ));
        $this->hasColumn('participation', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 4,
             ));
        $this->hasColumn('totalpageviews', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 4,
             ));
        $this->hasColumn('totalshared', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 4,
             ));
        $this->hasColumn('totalcomments', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 4,
             ));
        $this->hasColumn('creationtime', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 25,
             ));
        $this->hasColumn('Vote_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Vote', array(
             'local' => 'Vote_id',
             'foreign' => 'id'));

        $this->hasMany('Answervalue', array(
             'local' => 'id',
             'foreign' => 'Voteinstance_id'));
    }
}