<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Question', 'doctrine');

/**
 * BaseQuestion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $text
 * @property integer $sequence
 * @property integer $maxanswers
 * @property integer $Vote_id
 * @property integer $Questiontype_id
 * @property Vote $Vote
 * @property Questiontype $Questiontype
 * @property Doctrine_Collection $Answer
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method string              getText()            Returns the current record's "text" value
 * @method integer             getSequence()        Returns the current record's "sequence" value
 * @method integer             getMaxanswers()      Returns the current record's "maxanswers" value
 * @method integer             getVoteId()          Returns the current record's "Vote_id" value
 * @method integer             getQuestiontypeId()  Returns the current record's "Questiontype_id" value
 * @method Vote                getVote()            Returns the current record's "Vote" value
 * @method Questiontype        getQuestiontype()    Returns the current record's "Questiontype" value
 * @method Doctrine_Collection getAnswer()          Returns the current record's "Answer" collection
 * @method Question            setId()              Sets the current record's "id" value
 * @method Question            setText()            Sets the current record's "text" value
 * @method Question            setSequence()        Sets the current record's "sequence" value
 * @method Question            setMaxanswers()      Sets the current record's "maxanswers" value
 * @method Question            setVoteId()          Sets the current record's "Vote_id" value
 * @method Question            setQuestiontypeId()  Sets the current record's "Questiontype_id" value
 * @method Question            setVote()            Sets the current record's "Vote" value
 * @method Question            setQuestiontype()    Sets the current record's "Questiontype" value
 * @method Question            setAnswer()          Sets the current record's "Answer" collection
 * 
 * @package    PhpProject2
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseQuestion extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('question');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 4,
             ));
        $this->hasColumn('text', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 255,
             ));
        $this->hasColumn('sequence', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 4,
             ));
        $this->hasColumn('maxanswers', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 4,
             ));
        $this->hasColumn('Vote_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('Questiontype_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Vote', array(
             'local' => 'Vote_id',
             'foreign' => 'id'));

        $this->hasOne('Questiontype', array(
             'local' => 'Questiontype_id',
             'foreign' => 'id'));

        $this->hasMany('Answer', array(
             'local' => 'id',
             'foreign' => 'Question_id'));
    }
}