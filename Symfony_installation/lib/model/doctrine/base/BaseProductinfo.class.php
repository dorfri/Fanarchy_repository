<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Productinfo', 'doctrine');

/**
 * BaseProductinfo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $code
 * @property string $name
 * @property timestamp $updateddt
 * @property string $description
 * @property string $prodduration
 * @property string $prodtype
 * @property string $promotioncode
 * @property string $proddurationunits
 * @property integer $prodnumberusages
 * @property string $mustbeloggedin
 * @property string $purchasecaption
 * @property string $showexpirationdate
 * @property string $billingperiod
 * @property string $freeperiod
 * @property string $freeperiodunit
 * @property enum $isarbproduct
 * @property string $billingperiodunit
 * @property enum $emailtosite
 * @property string $prodcurrency
 * 
 * @method integer     getId()                 Returns the current record's "id" value
 * @method string      getCode()               Returns the current record's "code" value
 * @method string      getName()               Returns the current record's "name" value
 * @method timestamp   getUpdateddt()          Returns the current record's "updateddt" value
 * @method string      getDescription()        Returns the current record's "description" value
 * @method string      getProdduration()       Returns the current record's "prodduration" value
 * @method string      getProdtype()           Returns the current record's "prodtype" value
 * @method string      getPromotioncode()      Returns the current record's "promotioncode" value
 * @method string      getProddurationunits()  Returns the current record's "proddurationunits" value
 * @method integer     getProdnumberusages()   Returns the current record's "prodnumberusages" value
 * @method string      getMustbeloggedin()     Returns the current record's "mustbeloggedin" value
 * @method string      getPurchasecaption()    Returns the current record's "purchasecaption" value
 * @method string      getShowexpirationdate() Returns the current record's "showexpirationdate" value
 * @method string      getBillingperiod()      Returns the current record's "billingperiod" value
 * @method string      getFreeperiod()         Returns the current record's "freeperiod" value
 * @method string      getFreeperiodunit()     Returns the current record's "freeperiodunit" value
 * @method enum        getIsarbproduct()       Returns the current record's "isarbproduct" value
 * @method string      getBillingperiodunit()  Returns the current record's "billingperiodunit" value
 * @method enum        getEmailtosite()        Returns the current record's "emailtosite" value
 * @method string      getProdcurrency()       Returns the current record's "prodcurrency" value
 * @method Productinfo setId()                 Sets the current record's "id" value
 * @method Productinfo setCode()               Sets the current record's "code" value
 * @method Productinfo setName()               Sets the current record's "name" value
 * @method Productinfo setUpdateddt()          Sets the current record's "updateddt" value
 * @method Productinfo setDescription()        Sets the current record's "description" value
 * @method Productinfo setProdduration()       Sets the current record's "prodduration" value
 * @method Productinfo setProdtype()           Sets the current record's "prodtype" value
 * @method Productinfo setPromotioncode()      Sets the current record's "promotioncode" value
 * @method Productinfo setProddurationunits()  Sets the current record's "proddurationunits" value
 * @method Productinfo setProdnumberusages()   Sets the current record's "prodnumberusages" value
 * @method Productinfo setMustbeloggedin()     Sets the current record's "mustbeloggedin" value
 * @method Productinfo setPurchasecaption()    Sets the current record's "purchasecaption" value
 * @method Productinfo setShowexpirationdate() Sets the current record's "showexpirationdate" value
 * @method Productinfo setBillingperiod()      Sets the current record's "billingperiod" value
 * @method Productinfo setFreeperiod()         Sets the current record's "freeperiod" value
 * @method Productinfo setFreeperiodunit()     Sets the current record's "freeperiodunit" value
 * @method Productinfo setIsarbproduct()       Sets the current record's "isarbproduct" value
 * @method Productinfo setBillingperiodunit()  Sets the current record's "billingperiodunit" value
 * @method Productinfo setEmailtosite()        Sets the current record's "emailtosite" value
 * @method Productinfo setProdcurrency()       Sets the current record's "prodcurrency" value
 * 
 * @package    PhpProject2
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductinfo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('productinfo');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'unsigned' => true,
             'fixed' => 0,
             'length' => 4,
             ));
        $this->hasColumn('code', 'string', 255, array(
             'default' => '',
             'unique' => true,
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'default' => '',
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 255,
             ));
        $this->hasColumn('updateddt', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 25,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             ));
        $this->hasColumn('prodduration', 'string', 3, array(
             'default' => '',
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 3,
             ));
        $this->hasColumn('prodtype', 'string', 10, array(
             'default' => '',
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 10,
             ));
        $this->hasColumn('promotioncode', 'string', 10, array(
             'default' => '',
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 10,
             ));
        $this->hasColumn('proddurationunits', 'string', 2, array(
             'default' => 'MO',
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 2,
             ));
        $this->hasColumn('prodnumberusages', 'integer', 4, array(
             'default' => 1,
             'type' => 'integer',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 4,
             ));
        $this->hasColumn('mustbeloggedin', 'string', 1, array(
             'default' => 'N',
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 1,
             'length' => 1,
             ));
        $this->hasColumn('purchasecaption', 'string', 255, array(
             'default' => '',
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 255,
             ));
        $this->hasColumn('showexpirationdate', 'string', 1, array(
             'default' => '',
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 1,
             'length' => 1,
             ));
        $this->hasColumn('billingperiod', 'string', 10, array(
             'default' => '',
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 10,
             ));
        $this->hasColumn('freeperiod', 'string', 10, array(
             'default' => '',
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 10,
             ));
        $this->hasColumn('freeperiodunit', 'string', 10, array(
             'default' => '',
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 10,
             ));
        $this->hasColumn('isarbproduct', 'enum', 1, array(
             'default' => 0,
             'type' => 'enum',
             'notnull' => true,
             'values' => 
             array(
              0 => 0,
              1 => 1,
             ),
             'unsigned' => false,
             'fixed' => 0,
             'length' => 1,
             ));
        $this->hasColumn('billingperiodunit', 'string', 10, array(
             'default' => '',
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 10,
             ));
        $this->hasColumn('emailtosite', 'enum', 1, array(
             'default' => 0,
             'type' => 'enum',
             'notnull' => true,
             'values' => 
             array(
              0 => 0,
              1 => 1,
             ),
             'unsigned' => false,
             'fixed' => 0,
             'length' => 1,
             ));
        $this->hasColumn('prodcurrency', 'string', 10, array(
             'default' => '',
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 10,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}