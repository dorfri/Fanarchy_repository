<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Siteusers', 'doctrine');

/**
 * BaseSiteusers
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $firstname
 * @property string $lastname
 * @property string $email
 * @property timestamp $dateofbirth
 * @property string $password
 * @property string $sexorientation
 * @property string $relationshipstatus
 * @property string $relationshipwith
 * @property timestamp $anniversarydate
 * @property string $religion
 * @property string $politicalview
 * @property timestamp $createddate
 * @property integer $isactive
 * @property integer $Address_id
 * @property integer $Priviclass_id
 * @property integer $Profilepicture_id
 * @property integer $Education_id
 * @property integer $Gender_id
 * @property integer $Language_id
 * @property Address $Address
 * @property Priviclass $Priviclass
 * @property Mediapicture $Mediapicture
 * @property Education $Education
 * @property Gender $Gender
 * @property Language $Language
 * @property Doctrine_Collection $AnswerValues
 * @property Doctrine_Collection $Educations
 * @property Doctrine_Collection $Fangroups
 * @property Doctrine_Collection $Teams
 * @property Doctrine_Collection $MtmFangroup2siteusers
 * @property Doctrine_Collection $MtmSiteusers2answervalue
 * @property Doctrine_Collection $MtmSiteusers2education
 * @property Doctrine_Collection $MtmSiteusers2team
 * @property Doctrine_Collection $Teamsiteusersaddnlinfo
 * @property Doctrine_Collection $PaymentRegister
 * 
 * @method integer             getId()                       Returns the current record's "id" value
 * @method string              getFirstname()                Returns the current record's "firstname" value
 * @method string              getLastname()                 Returns the current record's "lastname" value
 * @method string              getEmail()                    Returns the current record's "email" value
 * @method timestamp           getDateofbirth()              Returns the current record's "dateofbirth" value
 * @method string              getPassword()                 Returns the current record's "password" value
 * @method string              getSexorientation()           Returns the current record's "sexorientation" value
 * @method string              getRelationshipstatus()       Returns the current record's "relationshipstatus" value
 * @method string              getRelationshipwith()         Returns the current record's "relationshipwith" value
 * @method timestamp           getAnniversarydate()          Returns the current record's "anniversarydate" value
 * @method string              getReligion()                 Returns the current record's "religion" value
 * @method string              getPoliticalview()            Returns the current record's "politicalview" value
 * @method timestamp           getCreateddate()              Returns the current record's "createddate" value
 * @method integer             getIsactive()                 Returns the current record's "isactive" value
 * @method integer             getAddressId()                Returns the current record's "Address_id" value
 * @method integer             getPriviclassId()             Returns the current record's "Priviclass_id" value
 * @method integer             getProfilepictureId()         Returns the current record's "Profilepicture_id" value
 * @method integer             getEducationId()              Returns the current record's "Education_id" value
 * @method integer             getGenderId()                 Returns the current record's "Gender_id" value
 * @method integer             getLanguageId()               Returns the current record's "Language_id" value
 * @method Address             getAddress()                  Returns the current record's "Address" value
 * @method Priviclass          getPriviclass()               Returns the current record's "Priviclass" value
 * @method Mediapicture        getMediapicture()             Returns the current record's "Mediapicture" value
 * @method Education           getEducation()                Returns the current record's "Education" value
 * @method Gender              getGender()                   Returns the current record's "Gender" value
 * @method Language            getLanguage()                 Returns the current record's "Language" value
 * @method Doctrine_Collection getAnswerValues()             Returns the current record's "AnswerValues" collection
 * @method Doctrine_Collection getEducations()               Returns the current record's "Educations" collection
 * @method Doctrine_Collection getFangroups()                Returns the current record's "Fangroups" collection
 * @method Doctrine_Collection getTeams()                    Returns the current record's "Teams" collection
 * @method Doctrine_Collection getMtmFangroup2siteusers()    Returns the current record's "MtmFangroup2siteusers" collection
 * @method Doctrine_Collection getMtmSiteusers2answervalue() Returns the current record's "MtmSiteusers2answervalue" collection
 * @method Doctrine_Collection getMtmSiteusers2education()   Returns the current record's "MtmSiteusers2education" collection
 * @method Doctrine_Collection getMtmSiteusers2team()        Returns the current record's "MtmSiteusers2team" collection
 * @method Doctrine_Collection getTeamsiteusersaddnlinfo()   Returns the current record's "Teamsiteusersaddnlinfo" collection
 * @method Doctrine_Collection getPaymentRegister()          Returns the current record's "PaymentRegister" collection
 * @method Siteusers           setId()                       Sets the current record's "id" value
 * @method Siteusers           setFirstname()                Sets the current record's "firstname" value
 * @method Siteusers           setLastname()                 Sets the current record's "lastname" value
 * @method Siteusers           setEmail()                    Sets the current record's "email" value
 * @method Siteusers           setDateofbirth()              Sets the current record's "dateofbirth" value
 * @method Siteusers           setPassword()                 Sets the current record's "password" value
 * @method Siteusers           setSexorientation()           Sets the current record's "sexorientation" value
 * @method Siteusers           setRelationshipstatus()       Sets the current record's "relationshipstatus" value
 * @method Siteusers           setRelationshipwith()         Sets the current record's "relationshipwith" value
 * @method Siteusers           setAnniversarydate()          Sets the current record's "anniversarydate" value
 * @method Siteusers           setReligion()                 Sets the current record's "religion" value
 * @method Siteusers           setPoliticalview()            Sets the current record's "politicalview" value
 * @method Siteusers           setCreateddate()              Sets the current record's "createddate" value
 * @method Siteusers           setIsactive()                 Sets the current record's "isactive" value
 * @method Siteusers           setAddressId()                Sets the current record's "Address_id" value
 * @method Siteusers           setPriviclassId()             Sets the current record's "Priviclass_id" value
 * @method Siteusers           setProfilepictureId()         Sets the current record's "Profilepicture_id" value
 * @method Siteusers           setEducationId()              Sets the current record's "Education_id" value
 * @method Siteusers           setGenderId()                 Sets the current record's "Gender_id" value
 * @method Siteusers           setLanguageId()               Sets the current record's "Language_id" value
 * @method Siteusers           setAddress()                  Sets the current record's "Address" value
 * @method Siteusers           setPriviclass()               Sets the current record's "Priviclass" value
 * @method Siteusers           setMediapicture()             Sets the current record's "Mediapicture" value
 * @method Siteusers           setEducation()                Sets the current record's "Education" value
 * @method Siteusers           setGender()                   Sets the current record's "Gender" value
 * @method Siteusers           setLanguage()                 Sets the current record's "Language" value
 * @method Siteusers           setAnswerValues()             Sets the current record's "AnswerValues" collection
 * @method Siteusers           setEducations()               Sets the current record's "Educations" collection
 * @method Siteusers           setFangroups()                Sets the current record's "Fangroups" collection
 * @method Siteusers           setTeams()                    Sets the current record's "Teams" collection
 * @method Siteusers           setMtmFangroup2siteusers()    Sets the current record's "MtmFangroup2siteusers" collection
 * @method Siteusers           setMtmSiteusers2answervalue() Sets the current record's "MtmSiteusers2answervalue" collection
 * @method Siteusers           setMtmSiteusers2education()   Sets the current record's "MtmSiteusers2education" collection
 * @method Siteusers           setMtmSiteusers2team()        Sets the current record's "MtmSiteusers2team" collection
 * @method Siteusers           setTeamsiteusersaddnlinfo()   Sets the current record's "Teamsiteusersaddnlinfo" collection
 * @method Siteusers           setPaymentRegister()          Sets the current record's "PaymentRegister" collection
 * 
 * @package    PhpProject2
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSiteusers extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('siteusers');
        $this->hasColumn('id', 'integer', 10, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 10,
             ));
        $this->hasColumn('firstname', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 255,
             ));
        $this->hasColumn('lastname', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 255,
             ));
        $this->hasColumn('dateofbirth', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 25,
             ));
        $this->hasColumn('password', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 50,
             ));
        $this->hasColumn('sexorientation', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 10,
             ));
        $this->hasColumn('relationshipstatus', 'string', 30, array(
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 30,
             ));
        $this->hasColumn('relationshipwith', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 50,
             ));
        $this->hasColumn('anniversarydate', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 25,
             ));
        $this->hasColumn('religion', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 255,
             ));
        $this->hasColumn('politicalview', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 255,
             ));
        $this->hasColumn('createddate', 'timestamp', 25, array(
             'type' => 'timestamp',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 25,
             ));
        $this->hasColumn('isactive', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 1,
             ));
        $this->hasColumn('Address_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('Priviclass_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('Profilepicture_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('Education_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('Gender_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
        $this->hasColumn('Language_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Address', array(
             'local' => 'Address_id',
             'foreign' => 'id'));

        $this->hasOne('Priviclass', array(
             'local' => 'Priviclass_id',
             'foreign' => 'id'));

        $this->hasOne('Mediapicture', array(
             'local' => 'Profilepicture_id',
             'foreign' => 'id'));

        $this->hasOne('Education', array(
             'local' => 'Education_id',
             'foreign' => 'id'));

        $this->hasOne('Gender', array(
             'local' => 'Gender_id',
             'foreign' => 'id'));

        $this->hasOne('Language', array(
             'local' => 'Language_id',
             'foreign' => 'id'));

        $this->hasMany('Answervalue as AnswerValues', array(
             'refClass' => 'MtmSiteusers2answervalue',
             'local' => 'user_id',
             'foreign' => 'answervalue_id'));

        $this->hasMany('Education as Educations', array(
             'refClass' => 'MtmSiteusers2education',
             'local' => 'siteusers_id',
             'foreign' => 'education_id'));

        $this->hasMany('Fangroup as Fangroups', array(
             'refClass' => 'MtmFangroup2siteusers',
             'local' => 'siteuser_id',
             'foreign' => 'fangroup_id'));

        $this->hasMany('Team as Teams', array(
             'refClass' => 'MtmSiteusers2team',
             'local' => 'siteusers_id',
             'foreign' => 'team_id'));

        $this->hasMany('MtmFangroup2siteusers', array(
             'local' => 'id',
             'foreign' => 'siteuser_id'));

        $this->hasMany('MtmSiteusers2answervalue', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('MtmSiteusers2education', array(
             'local' => 'id',
             'foreign' => 'siteusers_id'));

        $this->hasMany('MtmSiteusers2team', array(
             'local' => 'id',
             'foreign' => 'siteusers_id'));

        $this->hasMany('Teamsiteusersaddnlinfo', array(
             'local' => 'id',
             'foreign' => 'Siteusers_id'));

        $this->hasMany('PaymentRegister', array(
             'local' => 'id',
             'foreign' => 'Siteusers_id'));
    }
}