<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Answervalue', 'doctrine');

/**
 * BaseAnswervalue
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $valuenumeric
 * @property string $valueyesno
 * @property string $valuecomment
 * @property string $chosenottovotereason
 * @property integer $Voteinstance_id
 * @property Voteinstance $Voteinstance
 * @property Doctrine_Collection $Answers
 * @property Doctrine_Collection $SiteUsers
 * @property Doctrine_Collection $answers
 * @property Doctrine_Collection $MtmSiteusers2answervalue
 * 
 * @method integer             getId()                       Returns the current record's "id" value
 * @method integer             getValuenumeric()             Returns the current record's "valuenumeric" value
 * @method string              getValueyesno()               Returns the current record's "valueyesno" value
 * @method string              getValuecomment()             Returns the current record's "valuecomment" value
 * @method string              getChosenottovotereason()     Returns the current record's "chosenottovotereason" value
 * @method integer             getVoteinstanceId()           Returns the current record's "Voteinstance_id" value
 * @method Voteinstance        getVoteinstance()             Returns the current record's "Voteinstance" value
 * @method Doctrine_Collection getAnswers()                  Returns the current record's "Answers" collection
 * @method Doctrine_Collection getSiteUsers()                Returns the current record's "SiteUsers" collection
 * @method Doctrine_Collection getAnswers()                  Returns the current record's "answers" collection
 * @method Doctrine_Collection getMtmSiteusers2answervalue() Returns the current record's "MtmSiteusers2answervalue" collection
 * @method Answervalue         setId()                       Sets the current record's "id" value
 * @method Answervalue         setValuenumeric()             Sets the current record's "valuenumeric" value
 * @method Answervalue         setValueyesno()               Sets the current record's "valueyesno" value
 * @method Answervalue         setValuecomment()             Sets the current record's "valuecomment" value
 * @method Answervalue         setChosenottovotereason()     Sets the current record's "chosenottovotereason" value
 * @method Answervalue         setVoteinstanceId()           Sets the current record's "Voteinstance_id" value
 * @method Answervalue         setVoteinstance()             Sets the current record's "Voteinstance" value
 * @method Answervalue         setAnswers()                  Sets the current record's "Answers" collection
 * @method Answervalue         setSiteUsers()                Sets the current record's "SiteUsers" collection
 * @method Answervalue         setAnswers()                  Sets the current record's "answers" collection
 * @method Answervalue         setMtmSiteusers2answervalue() Sets the current record's "MtmSiteusers2answervalue" collection
 * 
 * @package    PhpProject2
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAnswervalue extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('answervalue');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 4,
             ));
        $this->hasColumn('valuenumeric', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 4,
             ));
        $this->hasColumn('valueyesno', 'string', 10, array(
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 10,
             ));
        $this->hasColumn('valuecomment', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 255,
             ));
        $this->hasColumn('chosenottovotereason', 'string', 20, array(
             'type' => 'string',
             'notnull' => true,
             'unsigned' => false,
             'fixed' => 0,
             'length' => 20,
             ));
        $this->hasColumn('Voteinstance_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Voteinstance', array(
             'local' => 'Voteinstance_id',
             'foreign' => 'id'));

        $this->hasMany('Answer as Answers', array(
             'refClass' => 'MtmAnswer2answervalue',
             'local' => 'answervalue_id',
             'foreign' => 'answer_id'));

        $this->hasMany('Siteusers as SiteUsers', array(
             'refClass' => 'MtmSiteusers2answervalue',
             'local' => 'answervalue_id',
             'foreign' => 'user_id'));

        $this->hasMany('MtmAnswer2answervalue as answers', array(
             'local' => 'id',
             'foreign' => 'answervalue_id'));

        $this->hasMany('MtmSiteusers2answervalue', array(
             'local' => 'id',
             'foreign' => 'answervalue_id'));
    }
}